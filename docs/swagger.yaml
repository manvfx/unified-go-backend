basePath: /
definitions:
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      lastLogin:
        type: string
      lastLoginAgent:
        type: string
      lastLoginIP:
        type: string
      password:
        type: string
      username:
        type: string
      verified:
        type: boolean
      verifiedAt:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: manvfx@gmail.com
    name: API Support
  description: This is a sample server for a Unified Go Backend.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Unified Go Backend
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Returns a token on successful login
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Login a user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
